name: Updater

on:
  schedule:
  - cron: '0 7 * * *'
  workflow_dispatch: {}

jobs:   
  update_flake:
    environment: GH
    runs-on: ubuntu-20.04
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
    - name: Install nix
      uses: cachix/install-nix-action@v18
      with:
        extra_nix_config: |
          auto-optimise-store = true
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          experimental-features = nix-command flakes
          substituters = https://cache.nixos.org/ https://nix-community.cachix.org
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
        install_url: https://releases.nixos.org/nix/nix-2.7.0/install
    - name: Set up git
      run: |
        git config user.email bots@kidsan.dev
        git config user.name "Git Bot"
    - name: Update the flake
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: nix flake update
    - name: Store flake.lock
      uses: actions/upload-artifact@v3
      with:
        name: flake_lock
        path: flake.lock

  push_update:
    runs-on: ubuntu-20.04
    permissions: write-all
    needs: [update_flake]
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
        token: '${{ secrets.GITHUB_TOKEN }}'
    - name: Restore flake.lock
      uses: actions/download-artifact@v3
      with:
        name: flake_lock
    - name: Set up git
      run: |
        git config user.email bots@kidsan.dev
        git config user.name "Git Bot"
    - name: Create and merge PR
      run: |
        if git diff --exit-code; then
          echo "Found no changes"
          exit 0
        fi

        git switch -c updates-${{ github.run_id }}
        git commit -am "flake.lock: Update"
        git push -u origin updates-${{ github.run_id }}
        PR=$(gh pr create \
          --assignee kidsan \
          --base main \
          --body "Automatic flake update on $(date -I)" \
          --fill \
          --title "Auto update $(date -I)")
        gh pr merge $PR --merge --delete-branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}